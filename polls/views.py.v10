#author: dennie
#date:2016-02-21 20:57
#popuse:realize polls

from django.shortcuts import render
from django.http import HttpResponse
from polls.models import Question,Choice
from django.template import loader
from django.http import Http404,HttpResponseRedirect, HttpResponse
from django.shortcuts import get_object_or_404,render
from django.views import generic
from django.core.urlresolvers import reverse
# Create your views here.

#def index(request):
#    return HttpResponse("Hello,world!You're at the polls index")
'''
def index(request):
    latest_question_list = Question.objects.order_by('-pub_date')[:5]
    output = ', '.join([q.question_text for q in latest_question_list])
    return HttpResponse(output)
    return HttpResponse(latest_question_list)
'''
#use templates
def index(request):
    latest_question_list = Question.objects.order_by('-pub_date')[:5]
    template = loader.get_template('polls/index.html')
    context = {'latest_question_list': latest_question_list}
    return HttpResponse(template.render(context,request))
'''
def detail(request,question_id):
    try:
        question = Question.objects.get(pk=question_id)
    except Question.DoesNontExist:
        raise Http404("Question does not exist")
    return render(request, 'polls/detail.html',{'question':question})

'''
def detail(request,question_id):
    question = get_object_or_404(Question,pk=question_id)
    return render(request, 'polls/detail.html', {'question': question})

def results(request,question_id):
    question = get_object_or_404(Question, pk=question_id)
    return render(request, 'polls/results.html',{'question':question})
'''
def vote(request,question_id):
    return HttpResponse("You're voting on question %s." % question_id)
'''

def vote(request,question_id):
    question = get_object_or_404(Question, pk=question_id)
    try:
        selected_choice = question.choice_set.get(pk=request.POST['choice'])
    except(KeyError, Choice.DoesNotExist):
        return render(request, 'polls/detail.html', {
            'question': question,
            'error_message': "You didn't select a choice",
        })
    else:
       selected_choice.votes += 1
       selected_choice.save()
    return HttpResponseRedirect(reverse('polls:results', args=(question.id,)))

'''
def vote(request, question_id):
    question = get_object_or_404(Question, pk=question_id)
    try:
        selected_choice = question.choice_set.get(pk=request.POST['choice'])
    except (KeyError, Choice.DoesNotExist):
        # Redisplay the question voting form.
        return render(request, 'polls/detail.html', {
            'question': question,
            'error_message': "You didn't select a choice.",
        })
    else:
        selected_choice.votes += 1
        selected_choice.save()
        # Always return an HttpResponseRedirect after successfully dealing
        # with POST data. This prevents data from being posted twice if a
        # user hits the Back button.
        return HttpResponseRedirect(reverse('polls:results', args=(question.id,)))
'''
